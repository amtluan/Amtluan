/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainFrame;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Hứa Minh Luân
 */

public class mainframe extends javax.swing.JFrame {

    /**
     * Creates new form mainframe
     */
    private boolean isSave= false;
    public mainframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        mncopy = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        mnNew = new javax.swing.JMenuItem();
        mnnewWindow = new javax.swing.JMenuItem();
        mnOpen = new javax.swing.JMenuItem();
        mnSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnExit = new javax.swing.JMenuItem();
        mnEdit = new javax.swing.JMenu();
        mnFormat = new javax.swing.JMenu();
        mnFont = new javax.swing.JMenuItem();

        mncopy.setText("Copy");
        jPopupMenu1.add(mncopy);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtContent.setColumns(20);
        txtContent.setRows(5);
        txtContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtContentMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtContentMouseReleased(evt);
            }
        });
        txtContent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContentKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtContent);

        mnFile.setText("File");

        mnNew.setText("New");
        mnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNewActionPerformed(evt);
            }
        });
        mnFile.add(mnNew);

        mnnewWindow.setText("newwin");
        mnnewWindow.setActionCommand("new window");
        mnFile.add(mnnewWindow);

        mnOpen.setText("Open");
        mnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnOpenActionPerformed(evt);
            }
        });
        mnFile.add(mnOpen);

        mnSave.setText("Save");
        mnFile.add(mnSave);
        mnFile.add(jSeparator2);

        mnExit.setText("Exit");
        mnFile.add(mnExit);

        jMenuBar1.add(mnFile);

        mnEdit.setText("Edit");
        jMenuBar1.add(mnEdit);

        mnFormat.setText("Format");

        mnFont.setText("jMenuItem1");
        mnFormat.add(mnFont);

        jMenuBar1.add(mnFormat);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1147, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNewActionPerformed
       String s=txtContent.getText();
        if(isSave)
            SaveFile();
        txtContent.setText("");
    }//GEN-LAST:event_mnNewActionPerformed
public void SaveFile(){
    int ans= JOptionPane.showConfirmDialog(null, " Do you want to save!","warming",JOptionPane.YES_NO_OPTION);
    if(ans==JOptionPane.YES_OPTION);
    {
        JFileChooser fc= new JFileChooser();
        int  result=fc.showSaveDialog(null);
        if(result ==JFileChooser.APPROVE_OPTION){
            try{
            String s= txtContent.getText();
            //lay teb file user chon
            File f= fc.getSelectedFile();
            PrintWriter w= new PrintWriter(f);
            w.print(s);
            w.flush();
        }
        catch(Exception e)
                {
                e.printStackTrace();
                }
    }
}}
    private void txtContentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContentKeyReleased

        isSave = true;
    }//GEN-LAST:event_txtContentKeyReleased
public  void OpenFile(){
    JFileChooser fcChooser= new  JFileChooser();
    int  result = fcChooser.showOpenDialog(null);
    if(result== JFileChooser.APPROVE_OPTION){
        try {
            File f= fcChooser.getSelectedFile();
            FileReader fr= new FileReader(f);
            BufferedReader r=new BufferedReader(fr);
            txtContent.setText("");
            while(r.ready()){
                txtContent.setText(txtContent.getText()+ r.readLine());
            }
            if(fr!= null) fr.close();
            if(r!= null) r.close();
            
        } catch (Exception e) {
        e.printStackTrace();
        }
    }
}
    private void mnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnOpenActionPerformed
     if(isSave)
         SaveFile();
         OpenFile();
                     
               
    }//GEN-LAST:event_mnOpenActionPerformed

    private void txtContentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContentMouseClicked
       
    }//GEN-LAST:event_txtContentMouseClicked

    private void txtContentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtContentMouseReleased
        // TODO add your handling code here:
         int x=evt.getXOnScreen();
         int y= evt.getYOnScreen();
         if(evt.getButton()==3)
         {
             jPopupMenu1.setLocation(x, y);
             jPopupMenu1.setVisible(isSave);
         }
        
    }//GEN-LAST:event_txtContentMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenu mnEdit;
    private javax.swing.JMenuItem mnExit;
    private javax.swing.JMenu mnFile;
    private javax.swing.JMenuItem mnFont;
    private javax.swing.JMenu mnFormat;
    private javax.swing.JMenuItem mnNew;
    private javax.swing.JMenuItem mnOpen;
    private javax.swing.JMenuItem mnSave;
    private javax.swing.JMenuItem mncopy;
    private javax.swing.JMenuItem mnnewWindow;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables
}
